---
import type { CollectionEntry } from "astro:content";
import Layout from "$lib/layouts/BaseLayout.astro";
import Heading from "$lib/components/Heading.astro";
import ExhibitionCard from "$lib/components/ExhibitionCard.astro";
import { getCollection } from "astro:content";
type Props = CollectionEntry<"exhibitions">;

const description =
  "ScanLAB Projects is an award winning creative studio. We specialise in exploring the use of large scale 3D scanning in architecture and the creative industries.";

function sortByDate(a: Props, b: Props) {
  const a2 = a.data.to!;
  const b2 = b.data.to!;
  var aa = a2.split("/").reverse().join(),
    bb = b2.split("/").reverse().join();
  return aa < bb ? -1 : aa > bb ? 1 : 0;
}
const collection = (await getCollection("exhibitions")) as Props[];
const exhibitions = collection.sort(sortByDate).reverse();

const UPCOMING_EXHIBITIONS = exhibitions.filter(
  ({ data }) => data.showing === "SOON"
);
const CURRENT_EXHIBITIONS = exhibitions.filter(
  ({ data }) => data.showing === "NOW"
);
const PAST_EXHIBITIONS = exhibitions.filter(
  ({ data }) => data.showing === "PAST"
);
// order by {id}
---

<Layout dark={true} title="Exhibitions - ScanLAB Projects" {description}>
  <main class="px-0 sm:px-8">
    {!!UPCOMING_EXHIBITIONS.length && <Heading>Upcoming</Heading>}
    {
      !!UPCOMING_EXHIBITIONS.length &&
        UPCOMING_EXHIBITIONS.map(({ slug, data }) => (
          <ExhibitionCard
            from={data.from}
            to={data.to}
            {slug}
            tickets={data.tickets}
            title={data.title}
            client={data.client}
            venue={data.venue}
            location={data.location}
            description={data.description}
          />
        ))
    }

    {!!CURRENT_EXHIBITIONS.length && <Heading>Current</Heading>}

    {
      !!CURRENT_EXHIBITIONS.length &&
        CURRENT_EXHIBITIONS.map(({ slug, data }) => (
          <ExhibitionCard
            from={data.from}
            to={data.to}
            {slug}
            tickets={data.tickets}
            title={data.title}
            client={data.client}
            venue={data.venue}
            location={data.location}
            description={data.description}
          />
        ))
    }

    <div id="table" class="flex flex-col gap-12 md:gap-12 items-center">
      <Heading>Previous</Heading>
      <div class="flex flex-col gap-8 w-full">
        <!-- <div
          class="grid grid-cols-8 gap-4 row-gap-4 font-bold text-xs pb-2 mb-4"
        >
          <span class=""></span>
          <span class="col-span-2">Event</span>

          <span class=""></span>
          <span class="text-right">Venue</span>
          <span class="">Location</span>

          <span class=""></span>
          <span class="text-right">Date</span>
        </div> -->
        {
          PAST_EXHIBITIONS.map(({ slug, data }) => (
            <div class="grid grid-cols-4 md:grid-cols-7 gap-4 font-light text-xs md:text-sm border-b-2 lg:border-0 pb-1 md:pb-0">
              {/* <div class="flex justify-start items-start text-xs">
                <span class="px-1 border rounded">Artwork</span>
              </div> */}
              <span class="md:col-span-2">{data.title}</span>

              <span class="text-right md:col-span-2">
                {data.venue}
                {/* {data.venue && data.venue.map((val) => <span>{val} </span>)} */}
              </span>
              <span class="md:col-span-2">{data.location}</span>
              {/* <span class="" /> */}
              <span class="text-right col-span-1">{data.to}</span>
            </div>
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<!-- <div class="col">{getVenue(data.venue)}</div> -->
<style>
  :global(article:first-of-type) {
    border-bottom: none;
  }
  #table {
    width: 100%;
    max-width: var(--width-table);
  }
  .border-b-thin {
    border-bottom: 1px solid rgba(0, 0, 0, 0.25);
  }
</style>
