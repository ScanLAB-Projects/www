---
import { capitalize } from "$lib/utils/helpers";
import { Image } from "astro:assets";

type Props = {
  slug?: string;
  tags?: string[];
  title?: string;
  client?: string;
  src?: any;
};
const { slug, tags = [], title, client, src } = Astro.props;
---

<a
  href={`/projects/${slug}`}
  class="banner cursor-pointer"
  data-tags={`${tags}`}
>
  <div class="meta @container">
    <div class="frame flex flex-col gap-0 @lg:gap-2">
      <h2 class="text-xl @lg:text-3xl @4xl:text-5xl font-bold">
        {title}
      </h2>
      <h3 class="text-lg @xl:text-2xl font-light">{client}</h3>
    </div>
    <div class="meta-frame">
      <div class="matt flex flex-row gap-2 translate-x-[0]">
        {
          tags.map((tag: string) => {
            return (
              <button class="tag-label tag-hover" data-use={tag}>
                {capitalize(tag)}
              </button>
            );
          })
        }
      </div>
    </div>
  </div>
  <Image
    src={src}
    alt={title || ""}
    style="height: 100%; width: 100%; object-fit: cover;"
  />
</a>

<style>
  @import "tailwindcss";

  .banner {
    color: var(--col-white);
    min-width: 0;
    display: inherit;
    transition: all 0.3s;
    flex: 1 1 100%;
    width: 100%;
    aspect-ratio: 16 / 7;
    position: relative;
    &.hide {
      display: none;
    }
  }
  .meta {
    /* transition: all 0.3s; */
    background-color: rgba(0, 0, 0, 0.25);
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    overflow: hidden;
    text-shadow: 0 0 0.25em rgba(0, 0, 0, 0.5);
  }

  .frame {
    position: relative;
    margin: 0 2em;
  }
  .frame::after {
    transition: width 0.3s;
    position: absolute;
    content: "";
    width: 0;
    height: var(--spacing-level-8);
    background-color: var(--col-white);
    left: 0;
    top: -0.75em;
    @apply rounded-md;
  }

  .banner:hover .frame::after {
    width: 100%;
  }
  a.banner:hover::after {
    width: 0;
  }
  .meta img {
    /* transition: all 0.3s; */
  }
  .banner:hover img {
    filter: brightness(0.5);
  }
  .banner:nth-child(n + 6) {
    font-size: 0.7em;
    width: 100%;
    flex: 0 0 calc(50% - (0.725 * var(--spacing-level-5)));
    aspect-ratio: 16 / 10;
    @media (max-width: 680px) {
      flex: 1 1 100%;
      font-size: 1em;
    }
    .tag-label {
      font-size: 1em;
    }
  }

  .banner {
    @media (max-width: 768px) {
      flex: none;
      height: 340px;
    }
  }

  .meta-frame {
    position: absolute;
    display: none;
    color: var(--col-white);
    width: 100%;
    height: 100%;
    .matt {
      font-size: 0.8em;
      margin: 1em;
      transition: all 0.3s;
    }
    .tag-hover {
      background-color: rgba(0, 0, 0, 0.25);
      transition: background 0.3s;
      &:hover {
        background-color: rgba(255, 255, 255, 0.125);
      }
    }
  }

  .banner:hover .meta-frame {
    display: grid;
    place-content: end;
    @starting-style {
      .matt {
        transform: translateX(100%);
      }
    }
  }
</style>
